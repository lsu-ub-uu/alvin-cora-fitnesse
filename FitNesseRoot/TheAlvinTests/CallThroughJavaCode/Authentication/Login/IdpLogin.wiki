---
Help: A test that checks that idpLogin works as expected
Test
---
!contents -R2 -g -p -f -h
#| import |
#| se.uu.ub.cora.fitnesseintegration |

!1 !-IdpLoginTest-!
IdpLogin is in test and production secured by apache and common login systems and can not be accessed without a successful login into the local idp. We are expecting the parameter eppn to be present when the user is allowed past apache and can access the idpLogin server. This eppn sent on to gatekeeperServer that looks for a user in the database with a matching eppn. Gatekeeper returns an authtoken for the user, and stores the user in the currently logged in users under the returned authtoken. If no user is found for an eppn an authtoken is created for and returned for the guest user.

!2 Fetch authTokens using idpLogin
!***> Get authTokens from idpLogin server
!| AuthenticationFixture |
| idpLogin? | EPPN | getLoginId? | getAuthToken? | getDeleteUrl? | getStatusType? |
| | fitnesseAdmin@system.cora.uu.se | fitnesseAdmin@system.cora.uu.se | $fitnesseAdminAuthToken= | $fitnesseAdminAuthTokenDeleteUrl= | OK |
| | fitnesseUser@system.cora.uu.se | fitnesseUser@system.cora.uu.se | $fitnesseUserAuthToken= | $fitnesseUserAuthTokenDeleteUrl= | OK |
| | userNotInDb@user.uu.se | alvinguest@system.cora.uu.se | $fitnesseGuestAuthToken= | $fitnesseGuestAuthTokenDeleteUrl= | OK |

*!
!2 Test with new texts to show that we can use our authToken and be our user
!***> Create data of recordType text (textSystemOne)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $fitnesseUserAuthToken | text | {"name":"text","children":[{"name":"recordInfo","children":[{"name":"id","value":"myAuthText"},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"textSystemOne"}]},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"}]},{"name":"textPart","attributes":{"type":"default","lang":"sv"} ,"children":[{"name":"text","value":"Min svenska text"}]}]} | =~/"name":"linkedRecordId",\s*"value":"121212"/ | CREATED |
*!
!***> Logout
!| AuthenticationFixture |
| deleteAuthToken? | existingAuthToken | authTokenDeleteUrl | getStatusType? |
| | $fitnesseUserAuthToken | $fitnesseUserAuthTokenDeleteUrl | OK |
| | $fitnesseGuestAuthToken | $fitnesseGuestAuthTokenDeleteUrl | OK |

*!
!2 Test with new texts to show that authToken is not valid after logout
!***> Create data of recordType text (textSystemOne)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $fitnesseUserAuthToken | text | {"name":"text","children":[{"name":"recordInfo","children":[{"name":"id","value":"myAuthText"},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"textSystemOne"}]},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"}]},{"name":"textPart","attributes":{"type":"default","lang":"sv"} ,"children":[{"name":"text","value":"Min svenska text"}]}]} | | UNAUTHORIZED |

*!
!2 Clean up created data
!***> Clean up created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $fitnesseAdminAuthToken | text | myAuthText | | OK |

!| AuthenticationFixture |
| deleteAuthToken? | existingAuthToken | authTokenDeleteUrl | getStatusType? |
| | $fitnesseAdminAuthToken | $fitnesseAdminAuthTokenDeleteUrl | OK |
*!
